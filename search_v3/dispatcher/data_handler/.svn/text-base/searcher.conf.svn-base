# the path of data for search server, which should keep the same with search server
main_data_path = ../data/cache_data/searcher/main

# the path of raw data
raw_data_path = ../data/cache_data/searcher/raw

# the path of cache data
cache_data_path = ../data/cache_data/searcher/cache

# main update threshold, when [new product]/[total product] > threshold/100,
# this will cause a main update
main_update_threshold = 10 # 10%
# the threshold of force main update
force_update_threshold = 20 # 20%
main_update_time = 1-4   # update between 01:00:00 and 04:00:00
main_update_interval = 2d  # 2 days, you can also set it like this: 20h (20 hours),  1w (1 week)

# lower limit of products num in a main update
main_num_lower = 90  # 90%
# higher limit of products num in a main update
main_num_higher = 120 # 120%

# bakup file's number is limit as 3
bak_file_num = 3  

# read process shell to call
read_cmd = ./reader_for_search -H 172.16.128.127 -P 3306 -D prodviewdb -u readuser -p password -l ../log >> /dev/null
#read_cmd = ./reader_for_search -H 192.168.85.132 -P 3306 -D search_v3_test -u root -p root -l ../log
# the data view to read in main type, which should be joined up with the db_tables
search_view = search_v3_view
#search_view = test_search
# the sql template to query, default as select [field] from [table] where [limit]
sql_template = select %s from %s where %s;
#sql_template = select %s from %s where %s and product_id % 10=0;
# indexer
index_cmd = BuilderEx >> ../log/builder.log
# the data tables to read
db_tables = products_core_search, b2c_product, product_info, search_info, product_price, product_stock, c2c_product, product_cat_promo
# fields to read from database
key_field = product_id

[ products_core_search ]
number_fields = product_name_status:1, product_medium:4, product_type:4, category_id:4, is_publication:1, publish_date:20, display_status:1, pre_sale:1, special_sale:1, promotion_id:4, first_input_date:20, shop_id:4, promo_start_date:20, promo_end_date:20, promotion_type:4, num_images:4, main_product_id:4, is_catalog_product:1, book_id:4, icon_flag_life_five_star:4, icon_flag_sole:4, icon_flag_mall_new:4, icon_flag_mall_hot:4, icon_flag_bang:4, icon_flag_character:4, product_action_id:4, action_start_date:20, action_end_date:20, is_publish:1, total_review_count:4, score:4, favorite_count:4, promo_saleprice:4, promotion_filt:4, product_promotion_filt:4, is_has_ebook:1, paper_book_product_id:4, ebook_product_id:4, device_id:4
string_fields = product_name, cat_paths, main_category, cat_paths_name, publisher, author_name, singer, conductor, director, actors, series_name, subname, device_type, distributor, isbn_search
timestamp_fields = last_modified_date
pre_read = 5 # 5 days

[ b2c_product ]
number_fields = modifytime:4, is_shop_product:1, is_share_product:1, is_shop_sell:1, is_dd_sell:1, brand_id:4, shop_info_status:1
string_fields = description, keyword, attrib, shop_info, brand_name
timestamp_fields = last_modified_date
pre_read = -1 # always

[ product_info ]
number_fields = 
string_fields = abstract, content, catalog
timestamp_fields = last_modified_date
pre_read = 5 # 5 days

[ search_info ]
number_fields = sale_day:4, sale_week:4, sale_month:4, sale_day_amt:4, sale_week_amt:4, sale_month_amt:4
string_fields = author_format, singer_format, director_format, title_synonym, title_primary, title_sub
timestamp_fields = last_modified_date
pre_read = -1 # always

[ product_price ]
number_fields = discount:4, price:4, dd_sale_price:4, dd_sale_price_max:4
string_fields =
timestamp_fields = last_modified_date
pre_read = -1 # always 

[ product_stock ]
number_fields = stock_status:1, city_stock_status:8
string_fields =
timestamp_fields = last_modified_date
pre_read = -1 # always

[ c2c_product ]
number_fields = c2c_price0:4, c2c_price1:4, is_c2c_book:1
string_fields = 
timestamp_fields = last_modified_date
pre_read = -1 # always

[ product_cat_promo ]
number_fields = cat_promotion_type:4, cat_promo_start_date:20, cat_promo_end_date:20
string_fields =
timestamp_fields = last_modified_date
pre_read = -1 # always
